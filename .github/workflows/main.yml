
name: Java Maven Build & Publish Artifact

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build_test:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml
  sonarqube:
    name: SonarQube Integration
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        # Disabling shallow clone is recommended for improving relevancy of reporting
        fetch-depth: 0
    - name: SonarQube Scan
      uses: sonarsource/sonarqube-scan-action@master
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }} //Sonar Token generated 
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }} //example URL (https://sq.bswlog.co.in/)               

    - name: Setup jfrog
      uses: jfrog/setup-jfrog-cli@v3
      with:
          version: latest
      env:
          JF_URL: "https://artifactory.com"  #be mindful not to add the path /artifactory here as it will cause authentication issue
          JF_USER: ${{ secrets.ARTIFACT_USER_ID }}
          JF_ACCESS_TOKEN: ${{ secrets.Password }} # You have an option of giving password as well

    - name: maven build
      run: |
              jf mvn-config --repo-deploy-releases=${ARTIFACTORY_RELEASE} --repo-deploy-snapshots=${ARTIFACTORY_SNAPSHOT} # mention the names of your release and snapshot repos within the jfrog artifacory
              jf mvn deploy

  
                       
